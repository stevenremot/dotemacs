#+TITLE: Emacs configuration

* Introduction
  :PROPERTIES:
  :tangle:   no
  :END:

  Here is the source of my Emacs configuration. Create the files by
  running ~org-babel-tangle~ (~C-c C-v t)~ in this file.

* Main script
  :PROPERTIES:
  :tangle:   ./init.el
  :END:

** Inhibit package-innitialize

   Add a commented call to ~package-initialize~ to inhibit it. We will
   do the call by hand later.

   #+BEGIN_SRC emacs-lisp
     ; (package-initialize)
   #+END_SRC

** Global variables

   These are commonn useful variables for getting the emacs init dir
   and the path to my personal local packages.

   #+BEGIN_SRC emacs-lisp
     (defconst my-init-dir (file-name-directory (or load-file-name (buffer-file-name))))
     (defconst my-site-lisp (concat my-init-dir "site-lisp/"))
   #+END_SRC

   ~my-site-lisp~ should be added to ~load-path~ as it contains packages.

   #+BEGIN_SRC emacs-lisp
     (add-to-list 'load-path my-site-lisp)
   #+END_SRC

** Custom configuration

   Move the custom configurationn file outside of the init file to
   avoid blending custom configuration with the init sources.

   #+BEGIN_SRC emacs-lisp
     (setq custom-file (concat my-init-dir "custom-file.el"))
     (load custom-file 'no-error)
   #+END_SRC

** Load the initialization modules

   Load the sources present in the init/ directory:

   #+NAME: init-modules
   - core
   - elpa
   - exec-path-from-shell
   - prompt
   - theme
   - org
   - neotree
   - ivy
   - shell
   - ag
   - editing
   - git
   - project
   - auto-completion
   - code-checking
   - lsp
   - rocktl
   - emacs-lisp
   - web
   - javascript
   - prettier
   - cucumber
   - markdown
   - yaml
   - android
   - ocaml
   - docker
   - php
   - redmine

   #+BEGIN_SRC emacs-lisp :var modules=init-modules
     (defun my-load-init-file (file)
       "Load one initialization file.

     FILE is the name of the file without extension and directory."
       (load (concat my-init-dir "init/" file ".el")))

     (mapc #'my-load-init-file modules)
   #+END_SRC

* Navigation
  :PROPERTIES:
  :tangle:   ./init/navigation.el
  :END:

** imenu

   #+BEGIN_SRC emacs-lisp
     (global-set-key (kbd "C-c i") #'imenu)
   #+END_SRC

# Local Variables:
# after-save-hook: (org-babel-tangle)
# End:

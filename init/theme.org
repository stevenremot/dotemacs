#+title: Theme setup

* Powerline
** Custom theme

  I use a slightly tuned powerline theme.

  #+BEGIN_SRC emacs-lisp
    (defun my-powerline-theme ()
      "Setup the default mode-line."
      (interactive)
      (setq-default mode-line-format
                    '("%e"
                      (:eval
                       (let* ((active (powerline-selected-window-active))
                              (mode-line (if active 'mode-line 'mode-line-inactive))
                              (face1 (if active 'powerline-active1 'powerline-inactive1))
                              (face2 (if active 'powerline-active2 'powerline-inactive2))
                              (separator-left (intern (format "powerline-%s-%s"
                                                              powerline-default-separator
                                                              (car powerline-default-separator-dir))))
                              (separator-right (intern (format "powerline-%s-%s"
                                                               powerline-default-separator
                                                               (cdr powerline-default-separator-dir))))
                              (lhs (list (powerline-raw "%*" nil 'l)
                                         (powerline-raw mode-line-mule-info nil 'l)
                                         (powerline-buffer-id nil 'l)
                                         (powerline-raw " ")
                                         (funcall separator-left mode-line face1)
                                         (when (boundp 'erc-modified-channels-object)
                                           (powerline-raw erc-modified-channels-object face1 'l))
                                         ;; Lines
                                         (powerline-raw "%4l" face1 'l)
                                         (powerline-raw ":" face1 'l)
                                         (powerline-raw "%3c" face1 'r)
                                         (powerline-raw "[%3p]" face1 'l)
                                         ;; End lines
                                         (powerline-narrow face1 'l)
                                         (powerline-raw " " face1)
                                         (funcall separator-left face1 face2)
                                         (powerline-vc face2 'r)))
                              (rhs (list (powerline-raw global-mode-string face2 'r)
                                         (funcall separator-right face2 face1)
                                         ;; Modes
                                         (powerline-major-mode face1 'l)
                                         (powerline-process face1)
                                         (powerline-minor-modes face1 'l)
                                         ;; End modes
                                         (funcall separator-right face1 mode-line)
                                         (powerline-hud face2 face1))))
                         (concat (powerline-render lhs)
                                 (powerline-fill face2 (powerline-width rhs))
                                 (powerline-render rhs)))))))
  #+END_SRC

** Setup

   #+BEGIN_SRC emacs-lisp
     (use-package powerline
       :ensure powerline
       :init (my-powerline-theme))
   #+END_SRC

* Solarized

  I don't use solarized right now.

  #+BEGIN_SRC emacs-lisp
    ;; (use-package solarized-theme
    ;;   :ensure solarized-theme
    ;;   :init (load-theme 'solarized-dark t))
  #+END_SRC

* Moe theme

  Moe, moe, kyun!

  #+BEGIN_SRC emacs-lisp
    (use-package moe-theme
      :ensure
      :init (progn
              (moe-dark)
              (powerline-moe-theme)))
  #+END_SRC
